name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: linuxserver/ffmpeg:8.0-cli-ls43

    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y python3-dev python3-pip python3-venv build-essential git
        apt-get clean
        rm -rf /var/lib/apt/lists/*
    
    - name: Create virtual environment
      run: |
        python3 -m venv /opt/venv
        . /opt/venv/bin/activate
        python -m pip install --upgrade pip
    
    - name: Install dependencies
      run: |
        . /opt/venv/bin/activate
        pip install -e ".[test]"
    
    - name: Run tests with coverage
      run: |
        # Run all tests - they now use mocking for GPU/FFmpeg/Plex
        # Fail if coverage drops below 70%
        . /opt/venv/bin/activate
        pytest tests/ -v --cov=plex_generate_previews --cov-report=xml --cov-report=term-missing --cov-report=html --cov-fail-under=70
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: always()
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Upload coverage HTML report as artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: htmlcov/
    
    - name: Coverage Summary
      if: always()
      run: |
        . /opt/venv/bin/activate
        echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY
        python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); root = tree.getroot(); coverage = float(root.attrib['line-rate']) * 100; print(f'**Total Coverage: {coverage:.2f}%**')" >> $GITHUB_STEP_SUMMARY || echo "Coverage report parsing failed" >> $GITHUB_STEP_SUMMARY
