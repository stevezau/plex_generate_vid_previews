name: Bump Version on Release

on:
  release:
    types: [published]

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.target_commitish }}
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract version from tag
        id: get_version
        run: |
          # Remove 'v' prefix if present (e.g., v2.1.3 -> 2.1.3)
          VERSION="${GITHUB_REF#refs/tags/}"
          VERSION="${VERSION#v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"
      
      - name: Parse version components
        id: parse_version
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          # Split version into major.minor.patch
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          echo "major=$MAJOR" >> $GITHUB_OUTPUT
          echo "minor=$MINOR" >> $GITHUB_OUTPUT
          echo "patch=$PATCH" >> $GITHUB_OUTPUT
          echo "Parsed: $MAJOR.$MINOR.$PATCH"
      
      - name: Update _version.py
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          MAJOR="${{ steps.parse_version.outputs.major }}"
          MINOR="${{ steps.parse_version.outputs.minor }}"
          PATCH="${{ steps.parse_version.outputs.patch }}"
          
          cat > plex_generate_previews/_version.py << EOF
          """Version information for plex-generate-previews."""

          __version__ = "$VERSION"
          __version_tuple__ = ($MAJOR, $MINOR, $PATCH)
          EOF
          
          echo "Updated _version.py to $VERSION"
          cat plex_generate_previews/_version.py
      
      - name: Update pyproject.toml
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          sed -i "s/^version = \".*\"/version = \"$VERSION\"/" pyproject.toml
          echo "Updated pyproject.toml to $VERSION"
          grep "^version = " pyproject.toml
      
      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add plex_generate_previews/_version.py pyproject.toml
          git commit -m "chore: bump version to ${{ steps.get_version.outputs.version }} [skip ci]"
          git push origin HEAD:${{ github.event.release.target_commitish }}

